"""
Django settings for spiralstudio project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', '6l_n157$&2xldb=caufe(t_ikm7aded=-afe5n=$sng5qz0i!6(at0&io')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', None) == 'DEBUG'

ALLOWED_HOSTS = os.environ.get('DOMAINS', 'localhost').split(',')
# Application definition

INSTALLED_APPS = [
    'channels',
    'ssr.apps.models',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'ssr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ssr.wsgi.application'
ASGI_APPLICATION = 'ssr.routing.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('redis', 6379)],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SITE_ID = 1
# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'de-DE'

TIME_ZONE = 'Europe/Berlin'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join('/media')
STATIC_ROOT = os.path.join('/static')
STATIC_URL = '/static/'


STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'full': {
            'format': '{asctime} {levelname} [{name}] {message}',
            'style': '{',
        },
        'sql': {
            'format': '{message}\n------------------',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/logs/django.log',
            'formatter': 'full',
            'maxBytes': 1024 * 1024 * 10,  # 10MB
            'backupCount': 10,
        },
        'django.server': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/logs/django_server.log',
            'formatter': 'full',
            'maxBytes': 1024 * 1024 * 10,  # 10MB
            'backupCount': 10,
        },
        'sql': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/logs/django_sql.log',
            'maxBytes': 1024 * 1024 * 10,  # 10MB
            'backupCount': 10,
            'formatter': 'sql',
        },
    },
    'loggers': {
        '': {
            'level': 'WARNING',
            'handlers': ['console'],
        },
        'django': {
            'level': 'INFO',
            'handlers': ['console'],
            'propagate': False,
        },
        'django.server': {
            'handlers': ['django.server'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['sql'],
            'level': 'WARN',  # Set to DEBUG to enable sql logging
            'propagate': False,

        },

        'ssr': {'level': 'INFO', 'handlers': ['console'], 'propagate': False},
        'ssr.consumers': {'level': 'INFO', 'handlers': ['console'], 'propagate': False},
        'ssr.store.x32': {'level': 'INFO', 'handlers': ['console'], 'propagate': False},
        'ssr.store.recorder': {'level': 'INFO', 'handlers': ['console'], 'propagate': False},
    }
}

SESSION_GROUP_NAME = 'session'
MIXER_GROUP_NAME = 'x32_in'
MIXER_CHANNEL_NAME = 'x32_out'

REAPER_IP = "host.docker.internal"
HOST_PATH = "/Users/csp/Projects/session-recorder/var/sessions/"
BASE_PATH = "/sessions/"
BASE_TEMPLATE = "/reaper/templates/base_template.RPP"
DROPBOX_TOKEN = os.environ.get('DROPBOX_TOKEN')
